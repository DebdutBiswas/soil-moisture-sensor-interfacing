
SoilMoistureSensorInterfacing.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000002a  00800200  000006f8  0000078c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000006f8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000c  0080022a  0080022a  000007b6  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000007b6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000007e8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000c8  00000000  00000000  00000828  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000016a5  00000000  00000000  000008f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000daf  00000000  00000000  00001f95  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000087f  00000000  00000000  00002d44  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001e0  00000000  00000000  000035c4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000721  00000000  00000000  000037a4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000944  00000000  00000000  00003ec5  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b8  00000000  00000000  00004809  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__ctors_end>
   4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
   8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
   c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  10:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  14:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  18:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  1c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  20:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  24:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  28:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  2c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  30:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  34:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  38:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  3c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  40:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  44:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  48:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  4c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  50:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  54:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  58:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  5c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  60:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  64:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  68:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  6c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  70:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  74:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  78:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  7c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  80:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  84:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  88:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  8c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  90:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  94:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  98:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  9c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  a0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  a4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  a8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  ac:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  b0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  b4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  b8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  bc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  c0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  c4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  c8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  cc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  d0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  d4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  d8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  dc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  e0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e8 ef       	ldi	r30, 0xF8	; 248
  fc:	f6 e0       	ldi	r31, 0x06	; 6
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	aa 32       	cpi	r26, 0x2A	; 42
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	aa e2       	ldi	r26, 0x2A	; 42
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	a6 33       	cpi	r26, 0x36	; 54
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <main>
 122:	0c 94 7a 03 	jmp	0x6f4	; 0x6f4 <_exit>

00000126 <__bad_interrupt>:
 126:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000012a <lcd_port_config>:

//Function to return mathematical range mapping
long map(long x, long in_min, long in_max, long out_min, long out_max)
{
	return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
}
 12a:	87 b1       	in	r24, 0x07	; 7
 12c:	87 6f       	ori	r24, 0xF7	; 247
 12e:	87 b9       	out	0x07, r24	; 7
 130:	88 b1       	in	r24, 0x08	; 8
 132:	88 70       	andi	r24, 0x08	; 8
 134:	88 b9       	out	0x08, r24	; 8
 136:	08 95       	ret

00000138 <lcd_reset>:
 138:	86 e6       	ldi	r24, 0x66	; 102
 13a:	9e e0       	ldi	r25, 0x0E	; 14
 13c:	01 97       	sbiw	r24, 0x01	; 1
 13e:	f1 f7       	brne	.-4      	; 0x13c <lcd_reset+0x4>
 140:	00 00       	nop
 142:	40 98       	cbi	0x08, 0	; 8
 144:	41 98       	cbi	0x08, 1	; 8
 146:	80 e3       	ldi	r24, 0x30	; 48
 148:	88 b9       	out	0x08, r24	; 8
 14a:	42 9a       	sbi	0x08, 2	; 8
 14c:	ef ef       	ldi	r30, 0xFF	; 255
 14e:	f7 e4       	ldi	r31, 0x47	; 71
 150:	31 97       	sbiw	r30, 0x01	; 1
 152:	f1 f7       	brne	.-4      	; 0x150 <lcd_reset+0x18>
 154:	00 c0       	rjmp	.+0      	; 0x156 <lcd_reset+0x1e>
 156:	00 00       	nop
 158:	42 98       	cbi	0x08, 2	; 8
 15a:	e6 e6       	ldi	r30, 0x66	; 102
 15c:	fe e0       	ldi	r31, 0x0E	; 14
 15e:	31 97       	sbiw	r30, 0x01	; 1
 160:	f1 f7       	brne	.-4      	; 0x15e <lcd_reset+0x26>
 162:	00 00       	nop
 164:	40 98       	cbi	0x08, 0	; 8
 166:	41 98       	cbi	0x08, 1	; 8
 168:	88 b9       	out	0x08, r24	; 8
 16a:	42 9a       	sbi	0x08, 2	; 8
 16c:	ef ef       	ldi	r30, 0xFF	; 255
 16e:	f7 e4       	ldi	r31, 0x47	; 71
 170:	31 97       	sbiw	r30, 0x01	; 1
 172:	f1 f7       	brne	.-4      	; 0x170 <lcd_reset+0x38>
 174:	00 c0       	rjmp	.+0      	; 0x176 <lcd_reset+0x3e>
 176:	00 00       	nop
 178:	42 98       	cbi	0x08, 2	; 8
 17a:	e6 e6       	ldi	r30, 0x66	; 102
 17c:	fe e0       	ldi	r31, 0x0E	; 14
 17e:	31 97       	sbiw	r30, 0x01	; 1
 180:	f1 f7       	brne	.-4      	; 0x17e <lcd_reset+0x46>
 182:	00 00       	nop
 184:	40 98       	cbi	0x08, 0	; 8
 186:	41 98       	cbi	0x08, 1	; 8
 188:	88 b9       	out	0x08, r24	; 8
 18a:	42 9a       	sbi	0x08, 2	; 8
 18c:	8f ef       	ldi	r24, 0xFF	; 255
 18e:	97 e4       	ldi	r25, 0x47	; 71
 190:	01 97       	sbiw	r24, 0x01	; 1
 192:	f1 f7       	brne	.-4      	; 0x190 <lcd_reset+0x58>
 194:	00 c0       	rjmp	.+0      	; 0x196 <lcd_reset+0x5e>
 196:	00 00       	nop
 198:	42 98       	cbi	0x08, 2	; 8
 19a:	e6 e6       	ldi	r30, 0x66	; 102
 19c:	fe e0       	ldi	r31, 0x0E	; 14
 19e:	31 97       	sbiw	r30, 0x01	; 1
 1a0:	f1 f7       	brne	.-4      	; 0x19e <lcd_reset+0x66>
 1a2:	00 00       	nop
 1a4:	40 98       	cbi	0x08, 0	; 8
 1a6:	41 98       	cbi	0x08, 1	; 8
 1a8:	80 e2       	ldi	r24, 0x20	; 32
 1aa:	88 b9       	out	0x08, r24	; 8
 1ac:	42 9a       	sbi	0x08, 2	; 8
 1ae:	8f ef       	ldi	r24, 0xFF	; 255
 1b0:	97 e4       	ldi	r25, 0x47	; 71
 1b2:	01 97       	sbiw	r24, 0x01	; 1
 1b4:	f1 f7       	brne	.-4      	; 0x1b2 <lcd_reset+0x7a>
 1b6:	00 c0       	rjmp	.+0      	; 0x1b8 <lcd_reset+0x80>
 1b8:	00 00       	nop
 1ba:	42 98       	cbi	0x08, 2	; 8
 1bc:	08 95       	ret

000001be <lcd_wr_command>:
 1be:	98 b1       	in	r25, 0x08	; 8
 1c0:	9f 70       	andi	r25, 0x0F	; 15
 1c2:	98 b9       	out	0x08, r25	; 8
 1c4:	98 b1       	in	r25, 0x08	; 8
 1c6:	28 2f       	mov	r18, r24
 1c8:	20 7f       	andi	r18, 0xF0	; 240
 1ca:	92 2b       	or	r25, r18
 1cc:	98 b9       	out	0x08, r25	; 8
 1ce:	40 98       	cbi	0x08, 0	; 8
 1d0:	41 98       	cbi	0x08, 1	; 8
 1d2:	42 9a       	sbi	0x08, 2	; 8
 1d4:	ef ef       	ldi	r30, 0xFF	; 255
 1d6:	f7 e4       	ldi	r31, 0x47	; 71
 1d8:	31 97       	sbiw	r30, 0x01	; 1
 1da:	f1 f7       	brne	.-4      	; 0x1d8 <lcd_wr_command+0x1a>
 1dc:	00 c0       	rjmp	.+0      	; 0x1de <lcd_wr_command+0x20>
 1de:	00 00       	nop
 1e0:	42 98       	cbi	0x08, 2	; 8
 1e2:	98 b1       	in	r25, 0x08	; 8
 1e4:	9f 70       	andi	r25, 0x0F	; 15
 1e6:	98 b9       	out	0x08, r25	; 8
 1e8:	98 b1       	in	r25, 0x08	; 8
 1ea:	82 95       	swap	r24
 1ec:	80 7f       	andi	r24, 0xF0	; 240
 1ee:	89 2b       	or	r24, r25
 1f0:	88 b9       	out	0x08, r24	; 8
 1f2:	40 98       	cbi	0x08, 0	; 8
 1f4:	41 98       	cbi	0x08, 1	; 8
 1f6:	42 9a       	sbi	0x08, 2	; 8
 1f8:	8f ef       	ldi	r24, 0xFF	; 255
 1fa:	97 e4       	ldi	r25, 0x47	; 71
 1fc:	01 97       	sbiw	r24, 0x01	; 1
 1fe:	f1 f7       	brne	.-4      	; 0x1fc <lcd_wr_command+0x3e>
 200:	00 c0       	rjmp	.+0      	; 0x202 <lcd_wr_command+0x44>
 202:	00 00       	nop
 204:	42 98       	cbi	0x08, 2	; 8
 206:	08 95       	ret

00000208 <lcd_init>:
 208:	0e 94 95 00 	call	0x12a	; 0x12a <lcd_port_config>
 20c:	0e 94 9c 00 	call	0x138	; 0x138 <lcd_reset>
 210:	86 e6       	ldi	r24, 0x66	; 102
 212:	9e e0       	ldi	r25, 0x0E	; 14
 214:	01 97       	sbiw	r24, 0x01	; 1
 216:	f1 f7       	brne	.-4      	; 0x214 <lcd_init+0xc>
 218:	00 00       	nop
 21a:	88 e2       	ldi	r24, 0x28	; 40
 21c:	0e 94 df 00 	call	0x1be	; 0x1be <lcd_wr_command>
 220:	81 e0       	ldi	r24, 0x01	; 1
 222:	0e 94 df 00 	call	0x1be	; 0x1be <lcd_wr_command>
 226:	86 e0       	ldi	r24, 0x06	; 6
 228:	0e 94 df 00 	call	0x1be	; 0x1be <lcd_wr_command>
 22c:	8e e0       	ldi	r24, 0x0E	; 14
 22e:	0e 94 df 00 	call	0x1be	; 0x1be <lcd_wr_command>
 232:	80 e8       	ldi	r24, 0x80	; 128
 234:	0e 94 df 00 	call	0x1be	; 0x1be <lcd_wr_command>
 238:	08 95       	ret

0000023a <lcd_wr_char>:
 23a:	98 b1       	in	r25, 0x08	; 8
 23c:	9f 70       	andi	r25, 0x0F	; 15
 23e:	98 b9       	out	0x08, r25	; 8
 240:	98 b1       	in	r25, 0x08	; 8
 242:	28 2f       	mov	r18, r24
 244:	20 7f       	andi	r18, 0xF0	; 240
 246:	92 2b       	or	r25, r18
 248:	98 b9       	out	0x08, r25	; 8
 24a:	40 9a       	sbi	0x08, 0	; 8
 24c:	41 98       	cbi	0x08, 1	; 8
 24e:	42 9a       	sbi	0x08, 2	; 8
 250:	ef ef       	ldi	r30, 0xFF	; 255
 252:	f7 e4       	ldi	r31, 0x47	; 71
 254:	31 97       	sbiw	r30, 0x01	; 1
 256:	f1 f7       	brne	.-4      	; 0x254 <lcd_wr_char+0x1a>
 258:	00 c0       	rjmp	.+0      	; 0x25a <lcd_wr_char+0x20>
 25a:	00 00       	nop
 25c:	42 98       	cbi	0x08, 2	; 8
 25e:	98 b1       	in	r25, 0x08	; 8
 260:	9f 70       	andi	r25, 0x0F	; 15
 262:	98 b9       	out	0x08, r25	; 8
 264:	98 b1       	in	r25, 0x08	; 8
 266:	82 95       	swap	r24
 268:	80 7f       	andi	r24, 0xF0	; 240
 26a:	89 2b       	or	r24, r25
 26c:	88 b9       	out	0x08, r24	; 8
 26e:	40 9a       	sbi	0x08, 0	; 8
 270:	41 98       	cbi	0x08, 1	; 8
 272:	42 9a       	sbi	0x08, 2	; 8
 274:	8f ef       	ldi	r24, 0xFF	; 255
 276:	97 e4       	ldi	r25, 0x47	; 71
 278:	01 97       	sbiw	r24, 0x01	; 1
 27a:	f1 f7       	brne	.-4      	; 0x278 <lcd_wr_char+0x3e>
 27c:	00 c0       	rjmp	.+0      	; 0x27e <lcd_wr_char+0x44>
 27e:	00 00       	nop
 280:	42 98       	cbi	0x08, 2	; 8
 282:	08 95       	ret

00000284 <lcd_home>:
 284:	80 e8       	ldi	r24, 0x80	; 128
 286:	0e 94 df 00 	call	0x1be	; 0x1be <lcd_wr_command>
 28a:	08 95       	ret

0000028c <lcd_cursor>:
 28c:	82 30       	cpi	r24, 0x02	; 2
 28e:	71 f0       	breq	.+28     	; 0x2ac <lcd_cursor+0x20>
 290:	18 f4       	brcc	.+6      	; 0x298 <lcd_cursor+0xc>
 292:	81 30       	cpi	r24, 0x01	; 1
 294:	31 f0       	breq	.+12     	; 0x2a2 <lcd_cursor+0x16>
 296:	08 95       	ret
 298:	83 30       	cpi	r24, 0x03	; 3
 29a:	69 f0       	breq	.+26     	; 0x2b6 <lcd_cursor+0x2a>
 29c:	84 30       	cpi	r24, 0x04	; 4
 29e:	81 f0       	breq	.+32     	; 0x2c0 <lcd_cursor+0x34>
 2a0:	08 95       	ret
 2a2:	8f e7       	ldi	r24, 0x7F	; 127
 2a4:	86 0f       	add	r24, r22
 2a6:	0e 94 df 00 	call	0x1be	; 0x1be <lcd_wr_command>
 2aa:	08 95       	ret
 2ac:	8f eb       	ldi	r24, 0xBF	; 191
 2ae:	86 0f       	add	r24, r22
 2b0:	0e 94 df 00 	call	0x1be	; 0x1be <lcd_wr_command>
 2b4:	08 95       	ret
 2b6:	83 e9       	ldi	r24, 0x93	; 147
 2b8:	86 0f       	add	r24, r22
 2ba:	0e 94 df 00 	call	0x1be	; 0x1be <lcd_wr_command>
 2be:	08 95       	ret
 2c0:	83 ed       	ldi	r24, 0xD3	; 211
 2c2:	86 0f       	add	r24, r22
 2c4:	0e 94 df 00 	call	0x1be	; 0x1be <lcd_wr_command>
 2c8:	08 95       	ret

000002ca <lcd_string>:
 2ca:	cf 93       	push	r28
 2cc:	df 93       	push	r29
 2ce:	ec 01       	movw	r28, r24
 2d0:	88 81       	ld	r24, Y
 2d2:	88 23       	and	r24, r24
 2d4:	31 f0       	breq	.+12     	; 0x2e2 <lcd_string+0x18>
 2d6:	21 96       	adiw	r28, 0x01	; 1
 2d8:	0e 94 1d 01 	call	0x23a	; 0x23a <lcd_wr_char>
 2dc:	89 91       	ld	r24, Y+
 2de:	81 11       	cpse	r24, r1
 2e0:	fb cf       	rjmp	.-10     	; 0x2d8 <lcd_string+0xe>
 2e2:	df 91       	pop	r29
 2e4:	cf 91       	pop	r28
 2e6:	08 95       	ret

000002e8 <lcd_print>:
 2e8:	0f 93       	push	r16
 2ea:	1f 93       	push	r17
 2ec:	cf 93       	push	r28
 2ee:	df 93       	push	r29
 2f0:	8a 01       	movw	r16, r20
 2f2:	e9 01       	movw	r28, r18
 2f4:	88 23       	and	r24, r24
 2f6:	11 f0       	breq	.+4      	; 0x2fc <lcd_print+0x14>
 2f8:	61 11       	cpse	r22, r1
 2fa:	03 c0       	rjmp	.+6      	; 0x302 <lcd_print+0x1a>
 2fc:	0e 94 42 01 	call	0x284	; 0x284 <lcd_home>
 300:	02 c0       	rjmp	.+4      	; 0x306 <lcd_print+0x1e>
 302:	0e 94 46 01 	call	0x28c	; 0x28c <lcd_cursor>
 306:	c5 30       	cpi	r28, 0x05	; 5
 308:	d1 05       	cpc	r29, r1
 30a:	09 f0       	breq	.+2      	; 0x30e <lcd_print+0x26>
 30c:	df c0       	rjmp	.+446    	; 0x4cc <__LOCK_REGION_LENGTH__+0xcc>
 30e:	98 01       	movw	r18, r16
 310:	32 95       	swap	r19
 312:	22 95       	swap	r18
 314:	2f 70       	andi	r18, 0x0F	; 15
 316:	23 27       	eor	r18, r19
 318:	3f 70       	andi	r19, 0x0F	; 15
 31a:	23 27       	eor	r18, r19
 31c:	a7 e4       	ldi	r26, 0x47	; 71
 31e:	b3 e0       	ldi	r27, 0x03	; 3
 320:	0e 94 36 03 	call	0x66c	; 0x66c <__umulhisi3>
 324:	96 95       	lsr	r25
 326:	87 95       	ror	r24
 328:	96 95       	lsr	r25
 32a:	87 95       	ror	r24
 32c:	96 95       	lsr	r25
 32e:	87 95       	ror	r24
 330:	c0 96       	adiw	r24, 0x30	; 48
 332:	90 93 2b 02 	sts	0x022B, r25	; 0x80022b <__data_end+0x1>
 336:	80 93 2a 02 	sts	0x022A, r24	; 0x80022a <__data_end>
 33a:	0e 94 1d 01 	call	0x23a	; 0x23a <lcd_wr_char>
 33e:	98 01       	movw	r18, r16
 340:	36 95       	lsr	r19
 342:	27 95       	ror	r18
 344:	36 95       	lsr	r19
 346:	27 95       	ror	r18
 348:	36 95       	lsr	r19
 34a:	27 95       	ror	r18
 34c:	a5 ec       	ldi	r26, 0xC5	; 197
 34e:	b0 e2       	ldi	r27, 0x20	; 32
 350:	0e 94 36 03 	call	0x66c	; 0x66c <__umulhisi3>
 354:	ac 01       	movw	r20, r24
 356:	52 95       	swap	r21
 358:	42 95       	swap	r20
 35a:	4f 70       	andi	r20, 0x0F	; 15
 35c:	45 27       	eor	r20, r21
 35e:	5f 70       	andi	r21, 0x0F	; 15
 360:	45 27       	eor	r20, r21
 362:	50 93 2f 02 	sts	0x022F, r21	; 0x80022f <lcd_char_temp+0x1>
 366:	40 93 2e 02 	sts	0x022E, r20	; 0x80022e <lcd_char_temp>
 36a:	9a 01       	movw	r18, r20
 36c:	ad ec       	ldi	r26, 0xCD	; 205
 36e:	bc ec       	ldi	r27, 0xCC	; 204
 370:	0e 94 36 03 	call	0x66c	; 0x66c <__umulhisi3>
 374:	96 95       	lsr	r25
 376:	87 95       	ror	r24
 378:	96 95       	lsr	r25
 37a:	87 95       	ror	r24
 37c:	96 95       	lsr	r25
 37e:	87 95       	ror	r24
 380:	9c 01       	movw	r18, r24
 382:	22 0f       	add	r18, r18
 384:	33 1f       	adc	r19, r19
 386:	88 0f       	add	r24, r24
 388:	99 1f       	adc	r25, r25
 38a:	88 0f       	add	r24, r24
 38c:	99 1f       	adc	r25, r25
 38e:	88 0f       	add	r24, r24
 390:	99 1f       	adc	r25, r25
 392:	82 0f       	add	r24, r18
 394:	93 1f       	adc	r25, r19
 396:	9a 01       	movw	r18, r20
 398:	28 1b       	sub	r18, r24
 39a:	39 0b       	sbc	r19, r25
 39c:	c9 01       	movw	r24, r18
 39e:	c0 96       	adiw	r24, 0x30	; 48
 3a0:	90 93 35 02 	sts	0x0235, r25	; 0x800235 <thousand+0x1>
 3a4:	80 93 34 02 	sts	0x0234, r24	; 0x800234 <thousand>
 3a8:	0e 94 1d 01 	call	0x23a	; 0x23a <lcd_wr_char>
 3ac:	03 c0       	rjmp	.+6      	; 0x3b4 <lcd_print+0xcc>
 3ae:	c3 30       	cpi	r28, 0x03	; 3
 3b0:	d1 05       	cpc	r29, r1
 3b2:	91 f5       	brne	.+100    	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 3b4:	98 01       	movw	r18, r16
 3b6:	36 95       	lsr	r19
 3b8:	27 95       	ror	r18
 3ba:	36 95       	lsr	r19
 3bc:	27 95       	ror	r18
 3be:	ab e7       	ldi	r26, 0x7B	; 123
 3c0:	b4 e1       	ldi	r27, 0x14	; 20
 3c2:	0e 94 36 03 	call	0x66c	; 0x66c <__umulhisi3>
 3c6:	ac 01       	movw	r20, r24
 3c8:	56 95       	lsr	r21
 3ca:	47 95       	ror	r20
 3cc:	50 93 2f 02 	sts	0x022F, r21	; 0x80022f <lcd_char_temp+0x1>
 3d0:	40 93 2e 02 	sts	0x022E, r20	; 0x80022e <lcd_char_temp>
 3d4:	9a 01       	movw	r18, r20
 3d6:	ad ec       	ldi	r26, 0xCD	; 205
 3d8:	bc ec       	ldi	r27, 0xCC	; 204
 3da:	0e 94 36 03 	call	0x66c	; 0x66c <__umulhisi3>
 3de:	96 95       	lsr	r25
 3e0:	87 95       	ror	r24
 3e2:	96 95       	lsr	r25
 3e4:	87 95       	ror	r24
 3e6:	96 95       	lsr	r25
 3e8:	87 95       	ror	r24
 3ea:	9c 01       	movw	r18, r24
 3ec:	22 0f       	add	r18, r18
 3ee:	33 1f       	adc	r19, r19
 3f0:	88 0f       	add	r24, r24
 3f2:	99 1f       	adc	r25, r25
 3f4:	88 0f       	add	r24, r24
 3f6:	99 1f       	adc	r25, r25
 3f8:	88 0f       	add	r24, r24
 3fa:	99 1f       	adc	r25, r25
 3fc:	82 0f       	add	r24, r18
 3fe:	93 1f       	adc	r25, r19
 400:	9a 01       	movw	r18, r20
 402:	28 1b       	sub	r18, r24
 404:	39 0b       	sbc	r19, r25
 406:	c9 01       	movw	r24, r18
 408:	c0 96       	adiw	r24, 0x30	; 48
 40a:	90 93 31 02 	sts	0x0231, r25	; 0x800231 <hundred+0x1>
 40e:	80 93 30 02 	sts	0x0230, r24	; 0x800230 <hundred>
 412:	0e 94 1d 01 	call	0x23a	; 0x23a <lcd_wr_char>
 416:	04 c0       	rjmp	.+8      	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
 418:	c2 30       	cpi	r28, 0x02	; 2
 41a:	d1 05       	cpc	r29, r1
 41c:	09 f0       	breq	.+2      	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
 41e:	5b c0       	rjmp	.+182    	; 0x4d6 <__LOCK_REGION_LENGTH__+0xd6>
 420:	98 01       	movw	r18, r16
 422:	ad ec       	ldi	r26, 0xCD	; 205
 424:	bc ec       	ldi	r27, 0xCC	; 204
 426:	0e 94 36 03 	call	0x66c	; 0x66c <__umulhisi3>
 42a:	ac 01       	movw	r20, r24
 42c:	56 95       	lsr	r21
 42e:	47 95       	ror	r20
 430:	56 95       	lsr	r21
 432:	47 95       	ror	r20
 434:	56 95       	lsr	r21
 436:	47 95       	ror	r20
 438:	50 93 2f 02 	sts	0x022F, r21	; 0x80022f <lcd_char_temp+0x1>
 43c:	40 93 2e 02 	sts	0x022E, r20	; 0x80022e <lcd_char_temp>
 440:	9a 01       	movw	r18, r20
 442:	0e 94 36 03 	call	0x66c	; 0x66c <__umulhisi3>
 446:	96 95       	lsr	r25
 448:	87 95       	ror	r24
 44a:	96 95       	lsr	r25
 44c:	87 95       	ror	r24
 44e:	96 95       	lsr	r25
 450:	87 95       	ror	r24
 452:	9c 01       	movw	r18, r24
 454:	22 0f       	add	r18, r18
 456:	33 1f       	adc	r19, r19
 458:	88 0f       	add	r24, r24
 45a:	99 1f       	adc	r25, r25
 45c:	88 0f       	add	r24, r24
 45e:	99 1f       	adc	r25, r25
 460:	88 0f       	add	r24, r24
 462:	99 1f       	adc	r25, r25
 464:	82 0f       	add	r24, r18
 466:	93 1f       	adc	r25, r19
 468:	9a 01       	movw	r18, r20
 46a:	28 1b       	sub	r18, r24
 46c:	39 0b       	sbc	r19, r25
 46e:	c9 01       	movw	r24, r18
 470:	c0 96       	adiw	r24, 0x30	; 48
 472:	90 93 2d 02 	sts	0x022D, r25	; 0x80022d <tens+0x1>
 476:	80 93 2c 02 	sts	0x022C, r24	; 0x80022c <tens>
 47a:	0e 94 1d 01 	call	0x23a	; 0x23a <lcd_wr_char>
 47e:	98 01       	movw	r18, r16
 480:	ad ec       	ldi	r26, 0xCD	; 205
 482:	bc ec       	ldi	r27, 0xCC	; 204
 484:	0e 94 36 03 	call	0x66c	; 0x66c <__umulhisi3>
 488:	96 95       	lsr	r25
 48a:	87 95       	ror	r24
 48c:	96 95       	lsr	r25
 48e:	87 95       	ror	r24
 490:	96 95       	lsr	r25
 492:	87 95       	ror	r24
 494:	9c 01       	movw	r18, r24
 496:	22 0f       	add	r18, r18
 498:	33 1f       	adc	r19, r19
 49a:	88 0f       	add	r24, r24
 49c:	99 1f       	adc	r25, r25
 49e:	88 0f       	add	r24, r24
 4a0:	99 1f       	adc	r25, r25
 4a2:	88 0f       	add	r24, r24
 4a4:	99 1f       	adc	r25, r25
 4a6:	82 0f       	add	r24, r18
 4a8:	93 1f       	adc	r25, r19
 4aa:	98 01       	movw	r18, r16
 4ac:	28 1b       	sub	r18, r24
 4ae:	39 0b       	sbc	r19, r25
 4b0:	c9 01       	movw	r24, r18
 4b2:	c0 96       	adiw	r24, 0x30	; 48
 4b4:	90 93 33 02 	sts	0x0233, r25	; 0x800233 <unit+0x1>
 4b8:	80 93 32 02 	sts	0x0232, r24	; 0x800232 <unit>
 4bc:	0e 94 1d 01 	call	0x23a	; 0x23a <lcd_wr_char>
 4c0:	26 97       	sbiw	r28, 0x06	; 6
 4c2:	6c f0       	brlt	.+26     	; 0x4de <__LOCK_REGION_LENGTH__+0xde>
 4c4:	85 e6       	ldi	r24, 0x65	; 101
 4c6:	0e 94 1d 01 	call	0x23a	; 0x23a <lcd_wr_char>
 4ca:	09 c0       	rjmp	.+18     	; 0x4de <__LOCK_REGION_LENGTH__+0xde>
 4cc:	c4 30       	cpi	r28, 0x04	; 4
 4ce:	d1 05       	cpc	r29, r1
 4d0:	09 f0       	breq	.+2      	; 0x4d4 <__LOCK_REGION_LENGTH__+0xd4>
 4d2:	6d cf       	rjmp	.-294    	; 0x3ae <lcd_print+0xc6>
 4d4:	34 cf       	rjmp	.-408    	; 0x33e <lcd_print+0x56>
 4d6:	c1 30       	cpi	r28, 0x01	; 1
 4d8:	d1 05       	cpc	r29, r1
 4da:	91 f7       	brne	.-28     	; 0x4c0 <__LOCK_REGION_LENGTH__+0xc0>
 4dc:	d0 cf       	rjmp	.-96     	; 0x47e <__LOCK_REGION_LENGTH__+0x7e>
 4de:	df 91       	pop	r29
 4e0:	cf 91       	pop	r28
 4e2:	1f 91       	pop	r17
 4e4:	0f 91       	pop	r16
 4e6:	08 95       	ret

000004e8 <lcd_clear>:
 4e8:	81 e0       	ldi	r24, 0x01	; 1
 4ea:	0e 94 df 00 	call	0x1be	; 0x1be <lcd_wr_command>
 4ee:	08 95       	ret

000004f0 <sm_port_config>:
 4f0:	80 b3       	in	r24, 0x10	; 16
 4f2:	8f 6d       	ori	r24, 0xDF	; 223
 4f4:	80 bb       	out	0x10, r24	; 16
 4f6:	08 95       	ret

000004f8 <adc_init>:
 4f8:	10 92 7c 00 	sts	0x007C, r1	; 0x80007c <__TEXT_REGION_LENGTH__+0x70007c>
 4fc:	86 e8       	ldi	r24, 0x86	; 134
 4fe:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x70007a>
 502:	87 ef       	ldi	r24, 0xF7	; 247
 504:	80 93 7b 00 	sts	0x007B, r24	; 0x80007b <__TEXT_REGION_LENGTH__+0x70007b>
 508:	80 e8       	ldi	r24, 0x80	; 128
 50a:	80 bf       	out	0x30, r24	; 48
 50c:	8f ef       	ldi	r24, 0xFF	; 255
 50e:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__TEXT_REGION_LENGTH__+0x70007e>
 512:	80 93 7d 00 	sts	0x007D, r24	; 0x80007d <__TEXT_REGION_LENGTH__+0x70007d>
 516:	08 95       	ret

00000518 <adc_read>:
 518:	88 30       	cpi	r24, 0x08	; 8
 51a:	28 f0       	brcs	.+10     	; 0x526 <adc_read+0xe>
 51c:	eb e7       	ldi	r30, 0x7B	; 123
 51e:	f0 e0       	ldi	r31, 0x00	; 0
 520:	90 81       	ld	r25, Z
 522:	98 60       	ori	r25, 0x08	; 8
 524:	90 83       	st	Z, r25
 526:	87 70       	andi	r24, 0x07	; 7
 528:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x70007c>
 52c:	ea e7       	ldi	r30, 0x7A	; 122
 52e:	f0 e0       	ldi	r31, 0x00	; 0
 530:	80 81       	ld	r24, Z
 532:	80 64       	ori	r24, 0x40	; 64
 534:	80 83       	st	Z, r24
 536:	80 81       	ld	r24, Z
 538:	84 ff       	sbrs	r24, 4
 53a:	fd cf       	rjmp	.-6      	; 0x536 <adc_read+0x1e>
 53c:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x700078>
 540:	20 91 79 00 	lds	r18, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x700079>
 544:	ea e7       	ldi	r30, 0x7A	; 122
 546:	f0 e0       	ldi	r31, 0x00	; 0
 548:	90 81       	ld	r25, Z
 54a:	90 61       	ori	r25, 0x10	; 16
 54c:	90 83       	st	Z, r25
 54e:	eb e7       	ldi	r30, 0x7B	; 123
 550:	f0 e0       	ldi	r31, 0x00	; 0
 552:	90 81       	ld	r25, Z
 554:	97 6f       	ori	r25, 0xF7	; 247
 556:	90 83       	st	Z, r25
 558:	90 e0       	ldi	r25, 0x00	; 0
 55a:	92 2b       	or	r25, r18
 55c:	08 95       	ret

0000055e <update_sm_sensor>:
 55e:	85 e0       	ldi	r24, 0x05	; 5
 560:	0e 94 8c 02 	call	0x518	; 0x518 <adc_read>
 564:	08 95       	ret

00000566 <moistureReading>:
 566:	0e 94 af 02 	call	0x55e	; 0x55e <update_sm_sensor>
 56a:	a0 e0       	ldi	r26, 0x00	; 0
 56c:	b0 e0       	ldi	r27, 0x00	; 0
 56e:	9c 01       	movw	r18, r24
 570:	ad 01       	movw	r20, r26
 572:	2c 52       	subi	r18, 0x2C	; 44
 574:	31 40       	sbci	r19, 0x01	; 1
 576:	41 09       	sbc	r20, r1
 578:	51 09       	sbc	r21, r1
 57a:	ac e9       	ldi	r26, 0x9C	; 156
 57c:	bf ef       	ldi	r27, 0xFF	; 255
 57e:	0e 94 53 03 	call	0x6a6	; 0x6a6 <__mulohisi3>
 582:	23 ed       	ldi	r18, 0xD3	; 211
 584:	32 e0       	ldi	r19, 0x02	; 2
 586:	40 e0       	ldi	r20, 0x00	; 0
 588:	50 e0       	ldi	r21, 0x00	; 0
 58a:	0e 94 17 03 	call	0x62e	; 0x62e <__divmodsi4>
 58e:	84 e6       	ldi	r24, 0x64	; 100
 590:	82 0f       	add	r24, r18
 592:	08 95       	ret

00000594 <port_init>:
void init_devices(void);

//Function to initialize PORTS
void port_init()
{
	lcd_init();
 594:	0e 94 04 01 	call	0x208	; 0x208 <lcd_init>
}

//Function to initialize sensor
void sm_init()
{
	sm_port_config();
 598:	0e 94 78 02 	call	0x4f0	; 0x4f0 <sm_port_config>
 59c:	08 95       	ret

0000059e <init_devices>:
}

//Function to initialize all devices
void init_devices (void)
{
	cli(); //Clears the global interrupts
 59e:	f8 94       	cli
	port_init();
 5a0:	0e 94 ca 02 	call	0x594	; 0x594 <port_init>
	sei();   //Enables the global interrupts
 5a4:	78 94       	sei
 5a6:	08 95       	ret

000005a8 <main>:
}

int main(void)
{
	init_devices();
 5a8:	0e 94 cf 02 	call	0x59e	; 0x59e <init_devices>
	adc_init(); //call ADC initialization
 5ac:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <adc_init>
	
	lcd_cursor(1,3);
 5b0:	63 e0       	ldi	r22, 0x03	; 3
 5b2:	81 e0       	ldi	r24, 0x01	; 1
 5b4:	0e 94 46 01 	call	0x28c	; 0x28c <lcd_cursor>
	lcd_string("HACTOBER-2K19");
 5b8:	80 e0       	ldi	r24, 0x00	; 0
 5ba:	92 e0       	ldi	r25, 0x02	; 2
 5bc:	0e 94 65 01 	call	0x2ca	; 0x2ca <lcd_string>
	lcd_cursor(2,4);
 5c0:	64 e0       	ldi	r22, 0x04	; 4
 5c2:	82 e0       	ldi	r24, 0x02	; 2
 5c4:	0e 94 46 01 	call	0x28c	; 0x28c <lcd_cursor>
	lcd_string("OPENSOURCE");
 5c8:	8e e0       	ldi	r24, 0x0E	; 14
 5ca:	92 e0       	ldi	r25, 0x02	; 2
 5cc:	0e 94 65 01 	call	0x2ca	; 0x2ca <lcd_string>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 5d0:	2f ef       	ldi	r18, 0xFF	; 255
 5d2:	8f ef       	ldi	r24, 0xFF	; 255
 5d4:	99 e5       	ldi	r25, 0x59	; 89
 5d6:	21 50       	subi	r18, 0x01	; 1
 5d8:	80 40       	sbci	r24, 0x00	; 0
 5da:	90 40       	sbci	r25, 0x00	; 0
 5dc:	e1 f7       	brne	.-8      	; 0x5d6 <main+0x2e>
 5de:	00 c0       	rjmp	.+0      	; 0x5e0 <main+0x38>
 5e0:	00 00       	nop
	_delay_ms(2000);
	lcd_clear();
 5e2:	0e 94 74 02 	call	0x4e8	; 0x4e8 <lcd_clear>
	
	lcd_cursor(1,2);
 5e6:	62 e0       	ldi	r22, 0x02	; 2
 5e8:	81 e0       	ldi	r24, 0x01	; 1
 5ea:	0e 94 46 01 	call	0x28c	; 0x28c <lcd_cursor>
	lcd_string("SOIL MOISTURE");
 5ee:	89 e1       	ldi	r24, 0x19	; 25
 5f0:	92 e0       	ldi	r25, 0x02	; 2
 5f2:	0e 94 65 01 	call	0x2ca	; 0x2ca <lcd_string>
	lcd_cursor(2,10);
 5f6:	6a e0       	ldi	r22, 0x0A	; 10
 5f8:	82 e0       	ldi	r24, 0x02	; 2
 5fa:	0e 94 46 01 	call	0x28c	; 0x28c <lcd_cursor>
	lcd_string("%");
 5fe:	87 e2       	ldi	r24, 0x27	; 39
 600:	92 e0       	ldi	r25, 0x02	; 2
 602:	0e 94 65 01 	call	0x2ca	; 0x2ca <lcd_string>
	
    while(1)
    {
		lcd_print(2,7,moistureReading(),3); //call moistureReading function as val parameter
 606:	0e 94 b3 02 	call	0x566	; 0x566 <moistureReading>
 60a:	48 2f       	mov	r20, r24
 60c:	50 e0       	ldi	r21, 0x00	; 0
 60e:	23 e0       	ldi	r18, 0x03	; 3
 610:	30 e0       	ldi	r19, 0x00	; 0
 612:	67 e0       	ldi	r22, 0x07	; 7
 614:	82 e0       	ldi	r24, 0x02	; 2
 616:	0e 94 74 01 	call	0x2e8	; 0x2e8 <lcd_print>
 61a:	2f ef       	ldi	r18, 0xFF	; 255
 61c:	8f e7       	ldi	r24, 0x7F	; 127
 61e:	94 e0       	ldi	r25, 0x04	; 4
 620:	21 50       	subi	r18, 0x01	; 1
 622:	80 40       	sbci	r24, 0x00	; 0
 624:	90 40       	sbci	r25, 0x00	; 0
 626:	e1 f7       	brne	.-8      	; 0x620 <main+0x78>
 628:	00 c0       	rjmp	.+0      	; 0x62a <main+0x82>
 62a:	00 00       	nop
 62c:	ec cf       	rjmp	.-40     	; 0x606 <main+0x5e>

0000062e <__divmodsi4>:
 62e:	05 2e       	mov	r0, r21
 630:	97 fb       	bst	r25, 7
 632:	1e f4       	brtc	.+6      	; 0x63a <__divmodsi4+0xc>
 634:	00 94       	com	r0
 636:	0e 94 2e 03 	call	0x65c	; 0x65c <__negsi2>
 63a:	57 fd       	sbrc	r21, 7
 63c:	07 d0       	rcall	.+14     	; 0x64c <__divmodsi4_neg2>
 63e:	0e 94 58 03 	call	0x6b0	; 0x6b0 <__udivmodsi4>
 642:	07 fc       	sbrc	r0, 7
 644:	03 d0       	rcall	.+6      	; 0x64c <__divmodsi4_neg2>
 646:	4e f4       	brtc	.+18     	; 0x65a <__divmodsi4_exit>
 648:	0c 94 2e 03 	jmp	0x65c	; 0x65c <__negsi2>

0000064c <__divmodsi4_neg2>:
 64c:	50 95       	com	r21
 64e:	40 95       	com	r20
 650:	30 95       	com	r19
 652:	21 95       	neg	r18
 654:	3f 4f       	sbci	r19, 0xFF	; 255
 656:	4f 4f       	sbci	r20, 0xFF	; 255
 658:	5f 4f       	sbci	r21, 0xFF	; 255

0000065a <__divmodsi4_exit>:
 65a:	08 95       	ret

0000065c <__negsi2>:
 65c:	90 95       	com	r25
 65e:	80 95       	com	r24
 660:	70 95       	com	r23
 662:	61 95       	neg	r22
 664:	7f 4f       	sbci	r23, 0xFF	; 255
 666:	8f 4f       	sbci	r24, 0xFF	; 255
 668:	9f 4f       	sbci	r25, 0xFF	; 255
 66a:	08 95       	ret

0000066c <__umulhisi3>:
 66c:	a2 9f       	mul	r26, r18
 66e:	b0 01       	movw	r22, r0
 670:	b3 9f       	mul	r27, r19
 672:	c0 01       	movw	r24, r0
 674:	a3 9f       	mul	r26, r19
 676:	70 0d       	add	r23, r0
 678:	81 1d       	adc	r24, r1
 67a:	11 24       	eor	r1, r1
 67c:	91 1d       	adc	r25, r1
 67e:	b2 9f       	mul	r27, r18
 680:	70 0d       	add	r23, r0
 682:	81 1d       	adc	r24, r1
 684:	11 24       	eor	r1, r1
 686:	91 1d       	adc	r25, r1
 688:	08 95       	ret

0000068a <__muluhisi3>:
 68a:	0e 94 36 03 	call	0x66c	; 0x66c <__umulhisi3>
 68e:	a5 9f       	mul	r26, r21
 690:	90 0d       	add	r25, r0
 692:	b4 9f       	mul	r27, r20
 694:	90 0d       	add	r25, r0
 696:	a4 9f       	mul	r26, r20
 698:	80 0d       	add	r24, r0
 69a:	91 1d       	adc	r25, r1
 69c:	11 24       	eor	r1, r1
 69e:	08 95       	ret

000006a0 <__mulshisi3>:
 6a0:	b7 ff       	sbrs	r27, 7
 6a2:	0c 94 45 03 	jmp	0x68a	; 0x68a <__muluhisi3>

000006a6 <__mulohisi3>:
 6a6:	0e 94 45 03 	call	0x68a	; 0x68a <__muluhisi3>
 6aa:	82 1b       	sub	r24, r18
 6ac:	93 0b       	sbc	r25, r19
 6ae:	08 95       	ret

000006b0 <__udivmodsi4>:
 6b0:	a1 e2       	ldi	r26, 0x21	; 33
 6b2:	1a 2e       	mov	r1, r26
 6b4:	aa 1b       	sub	r26, r26
 6b6:	bb 1b       	sub	r27, r27
 6b8:	fd 01       	movw	r30, r26
 6ba:	0d c0       	rjmp	.+26     	; 0x6d6 <__udivmodsi4_ep>

000006bc <__udivmodsi4_loop>:
 6bc:	aa 1f       	adc	r26, r26
 6be:	bb 1f       	adc	r27, r27
 6c0:	ee 1f       	adc	r30, r30
 6c2:	ff 1f       	adc	r31, r31
 6c4:	a2 17       	cp	r26, r18
 6c6:	b3 07       	cpc	r27, r19
 6c8:	e4 07       	cpc	r30, r20
 6ca:	f5 07       	cpc	r31, r21
 6cc:	20 f0       	brcs	.+8      	; 0x6d6 <__udivmodsi4_ep>
 6ce:	a2 1b       	sub	r26, r18
 6d0:	b3 0b       	sbc	r27, r19
 6d2:	e4 0b       	sbc	r30, r20
 6d4:	f5 0b       	sbc	r31, r21

000006d6 <__udivmodsi4_ep>:
 6d6:	66 1f       	adc	r22, r22
 6d8:	77 1f       	adc	r23, r23
 6da:	88 1f       	adc	r24, r24
 6dc:	99 1f       	adc	r25, r25
 6de:	1a 94       	dec	r1
 6e0:	69 f7       	brne	.-38     	; 0x6bc <__udivmodsi4_loop>
 6e2:	60 95       	com	r22
 6e4:	70 95       	com	r23
 6e6:	80 95       	com	r24
 6e8:	90 95       	com	r25
 6ea:	9b 01       	movw	r18, r22
 6ec:	ac 01       	movw	r20, r24
 6ee:	bd 01       	movw	r22, r26
 6f0:	cf 01       	movw	r24, r30
 6f2:	08 95       	ret

000006f4 <_exit>:
 6f4:	f8 94       	cli

000006f6 <__stop_program>:
 6f6:	ff cf       	rjmp	.-2      	; 0x6f6 <__stop_program>
